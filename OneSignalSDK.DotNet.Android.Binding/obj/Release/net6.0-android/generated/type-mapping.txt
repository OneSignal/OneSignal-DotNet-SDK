com/onesignal/AlertDialogPrepromptForAndroidSettings = Com.OneSignal.Android.AlertDialogPrepromptForAndroidSettings
  INSTANCE = Instance
  show(Landroid/app/Activity;Ljava/lang/String;Ljava/lang/String;Lcom/onesignal/AlertDialogPrepromptForAndroidSettings$Callback;)V = Show(Android.App.Activity, string, string, Com.OneSignal.Android.AlertDialogPrepromptForAndroidSettings.ICallback)
com/onesignal/BootUpReceiver = Com.OneSignal.Android.BootUpReceiver
  <init>()V = .ctor()
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
com/onesignal/BuildConfig = Com.OneSignal.Android.BuildConfig
  <init>()V = .ctor()
  BUILD_TYPE = BuildType
  DEBUG = Debug
  LIBRARY_PACKAGE_NAME = LibraryPackageName
com/onesignal/BundleCompat = Com.OneSignal.Android.IBundleCompat
  getBundle()Ljava/lang/Object; = Bundle
  containsKey(Ljava/lang/String;)Z = ContainsKey(string)
  getBoolean(Ljava/lang/String;)Z = GetBoolean(string)
  getBoolean(Ljava/lang/String;Z)Z = GetBoolean(string, bool)
  getInt(Ljava/lang/String;)Ljava/lang/Integer; = GetInt(string)
  getLong(Ljava/lang/String;)Ljava/lang/Long; = GetLong(string)
  getString(Ljava/lang/String;)Ljava/lang/String; = GetString(string)
  putBoolean(Ljava/lang/String;Ljava/lang/Boolean;)V = PutBoolean(string, Java.Lang.Boolean)
  putInt(Ljava/lang/String;Ljava/lang/Integer;)V = PutInt(string, Java.Lang.Integer)
  putLong(Ljava/lang/String;Ljava/lang/Long;)V = PutLong(string, Java.Lang.Long)
  putString(Ljava/lang/String;Ljava/lang/String;)V = PutString(string, string)
  setBundle(Landroid/os/Parcelable;)V = SetBundle(Android.OS.IParcelable)
com/onesignal/FCMIntentJobService = Com.OneSignal.Android.FCMIntentJobService
  <init>()V = .ctor()
  BUNDLE_EXTRA = BundleExtra
  isStopped()Z = IsStopped
  enqueueWork(Landroid/content/Context;Landroid/content/Intent;)V = EnqueueWork(Android.Content.Context, Android.Content.Intent)
  enqueueWork(Landroid/content/Context;Landroid/content/ComponentName;ILandroid/content/Intent;Z)V = EnqueueWork(Android.Content.Context, Android.Content.ComponentName, int, Android.Content.Intent, bool)
  enqueueWork(Landroid/content/Context;Ljava/lang/Class;ILandroid/content/Intent;Z)V = EnqueueWork(Android.Content.Context, Java.Lang.Class, int, Android.Content.Intent, bool)
  onBind(Landroid/content/Intent;)Landroid/os/IBinder; = OnBind(Android.Content.Intent)
  onCreate()V = OnCreate()
  onDestroy()V = OnDestroy()
  onHandleWork(Landroid/content/Intent;)V = OnHandleWork(Android.Content.Intent)
  onStartCommand(Landroid/content/Intent;II)I = OnStartCommand(Android.Content.Intent, Android.App.StartCommandFlags, int)
  onStopCurrentWork()Z = OnStopCurrentWork()
  setInterruptIfStopped(Z)V = SetInterruptIfStopped(bool)
com/onesignal/GenerateNotificationOpenIntent = Com.OneSignal.Android.GenerateNotificationOpenIntent
  <init>(Landroid/content/Context;Landroid/content/Intent;Z)V = .ctor(Android.Content.Context, Android.Content.Intent, bool)
  getIntentVisible()Landroid/content/Intent; = IntentVisible
com/onesignal/GenerateNotificationOpenIntentFromPushPayload = Com.OneSignal.Android.GenerateNotificationOpenIntentFromPushPayload
  INSTANCE = Instance
  create(Landroid/content/Context;Lorg/json/JSONObject;)Lcom/onesignal/GenerateNotificationOpenIntent; = Create(Android.Content.Context, Org.Json.JSONObject)
com/onesignal/influence/data/OSChannelTracker = Com.Onesignal.Influence.Data.OSChannelTracker
  getChannelLimit()I = ChannelLimit
  getChannelType()Lcom/onesignal/influence/domain/OSInfluenceChannel; = ChannelType
  getCurrentSessionInfluence()Lcom/onesignal/influence/domain/OSInfluence; = CurrentSessionInfluence
  getDataRepository()Lcom/onesignal/influence/data/OSInfluenceDataRepository; = DataRepository
  setDataRepository(Lcom/onesignal/influence/data/OSInfluenceDataRepository;)V = DataRepository
  getDirectId()Ljava/lang/String; = DirectId
  setDirectId(Ljava/lang/String;)V = DirectId
  getIdTag()Ljava/lang/String; = IdTag
  getIndirectAttributionWindow()I = IndirectAttributionWindow
  getIndirectIds()Lorg/json/JSONArray; = IndirectIds
  setIndirectIds(Lorg/json/JSONArray;)V = IndirectIds
  getInfluenceType()Lcom/onesignal/influence/domain/OSInfluenceType; = InfluenceType
  setInfluenceType(Lcom/onesignal/influence/domain/OSInfluenceType;)V = InfluenceType
  getLastChannelObjects()Lorg/json/JSONArray; = LastChannelObjects
  getLastReceivedIds()Lorg/json/JSONArray; = LastReceivedIds
  getLogger()Lcom/onesignal/OSLogger; = Logger
  setLogger(Lcom/onesignal/OSLogger;)V = Logger
  addSessionData(Lorg/json/JSONObject;Lcom/onesignal/influence/domain/OSInfluence;)V = AddSessionData(Org.Json.JSONObject, Com.Onesignal.Influence.Domain.OSInfluence)
  cacheState()V = CacheState()
  getLastChannelObjectsReceivedByNewId(Ljava/lang/String;)Lorg/json/JSONArray; = GetLastChannelObjectsReceivedByNewId(string)
  initInfluencedTypeFromCache()V = InitInfluencedTypeFromCache()
  resetAndInitInfluence()V = ResetAndInitInfluence()
  saveChannelObjects(Lorg/json/JSONArray;)V = SaveChannelObjects(Org.Json.JSONArray)
  saveLastId(Ljava/lang/String;)V = SaveLastId(string)
com/onesignal/influence/data/OSInfluenceDataRepository = Com.Onesignal.Influence.Data.OSInfluenceDataRepository
  <init>(Lcom/onesignal/OSSharedPreferences;)V = .ctor(Com.OneSignal.Android.IOSSharedPreferences)
  getCachedNotificationOpenId()Ljava/lang/String; = CachedNotificationOpenId
  getIamCachedInfluenceType()Lcom/onesignal/influence/domain/OSInfluenceType; = IamCachedInfluenceType
  getIamIndirectAttributionWindow()I = IamIndirectAttributionWindow
  getIamLimit()I = IamLimit
  isDirectInfluenceEnabled()Z = IsDirectInfluenceEnabled
  isIndirectInfluenceEnabled()Z = IsIndirectInfluenceEnabled
  isUnattributedInfluenceEnabled()Z = IsUnattributedInfluenceEnabled
  getLastIAMsReceivedData()Lorg/json/JSONArray; = LastIAMsReceivedData
  getLastNotificationsReceivedData()Lorg/json/JSONArray; = LastNotificationsReceivedData
  getNotificationCachedInfluenceType()Lcom/onesignal/influence/domain/OSInfluenceType; = NotificationCachedInfluenceType
  getNotificationIndirectAttributionWindow()I = NotificationIndirectAttributionWindow
  getNotificationLimit()I = NotificationLimit
  cacheIAMInfluenceType(Lcom/onesignal/influence/domain/OSInfluenceType;)V = CacheIAMInfluenceType(Com.Onesignal.Influence.Domain.OSInfluenceType)
  cacheNotificationInfluenceType(Lcom/onesignal/influence/domain/OSInfluenceType;)V = CacheNotificationInfluenceType(Com.Onesignal.Influence.Domain.OSInfluenceType)
  cacheNotificationOpenId(Ljava/lang/String;)V = CacheNotificationOpenId(string)
  saveIAMs(Lorg/json/JSONArray;)V = SaveIAMs(Org.Json.JSONArray)
  saveInfluenceParams(Lcom/onesignal/OneSignalRemoteParams$InfluenceParams;)V = SaveInfluenceParams(Com.OneSignal.Android.OneSignalRemoteParams.InfluenceParams)
  saveNotifications(Lorg/json/JSONArray;)V = SaveNotifications(Org.Json.JSONArray)
com/onesignal/influence/data/OSTrackerFactory = Com.Onesignal.Influence.Data.OSTrackerFactory
  <init>(Lcom/onesignal/OSSharedPreferences;Lcom/onesignal/OSLogger;Lcom/onesignal/OSTime;)V = .ctor(Com.OneSignal.Android.IOSSharedPreferences, Com.OneSignal.Android.IOSLogger, Com.OneSignal.Android.IOSTime)
  getChannels()Ljava/util/List; = Channels
  getIAMChannelTracker()Lcom/onesignal/influence/data/OSChannelTracker; = IAMChannelTracker
  getInfluences()Ljava/util/List; = Influences
  getNotificationChannelTracker()Lcom/onesignal/influence/data/OSChannelTracker; = NotificationChannelTracker
  getSessionInfluences()Ljava/util/List; = SessionInfluences
  addSessionData(Lorg/json/JSONObject;Ljava/util/List;)V = AddSessionData(Org.Json.JSONObject, System.Collections.Generic.IList<Com.Onesignal.Influence.Domain.OSInfluence>)
  getChannelByEntryAction(Lcom/onesignal/OneSignal$AppEntryAction;)Lcom/onesignal/influence/data/OSChannelTracker; = GetChannelByEntryAction(Com.OneSignal.Android.OneSignal.AppEntryAction)
  getChannelsToResetByEntryAction(Lcom/onesignal/OneSignal$AppEntryAction;)Ljava/util/List; = GetChannelsToResetByEntryAction(Com.OneSignal.Android.OneSignal.AppEntryAction)
  initFromCache()V = InitFromCache()
  saveInfluenceParams(Lcom/onesignal/OneSignalRemoteParams$InfluenceParams;)V = SaveInfluenceParams(Com.OneSignal.Android.OneSignalRemoteParams.InfluenceParams)
com/onesignal/influence/domain/OSInfluence = Com.Onesignal.Influence.Domain.OSInfluence
  <init>(Lcom/onesignal/influence/domain/OSInfluenceChannel;Lcom/onesignal/influence/domain/OSInfluenceType;Lorg/json/JSONArray;)V = .ctor(Com.Onesignal.Influence.Domain.OSInfluenceChannel, Com.Onesignal.Influence.Domain.OSInfluenceType, Org.Json.JSONArray)
  <init>(Ljava/lang/String;)V = .ctor(string)
  getDirectId()Ljava/lang/String; = DirectId
  getIds()Lorg/json/JSONArray; = Ids
  setIds(Lorg/json/JSONArray;)V = Ids
  getInfluenceChannel()Lcom/onesignal/influence/domain/OSInfluenceChannel; = InfluenceChannel
  getInfluenceType()Lcom/onesignal/influence/domain/OSInfluenceType; = InfluenceType
  setInfluenceType(Lcom/onesignal/influence/domain/OSInfluenceType;)V = InfluenceType
  copy()Lcom/onesignal/influence/domain/OSInfluence; = Copy()
  toJSONString()Ljava/lang/String; = ToJSONString()
com/onesignal/influence/domain/OSInfluenceChannel = Com.Onesignal.Influence.Domain.OSInfluenceChannel
  Companion = Companion
  IAM = Iam
  NOTIFICATION = Notification
  equalsName(Ljava/lang/String;)Z = EqualsName(string)
  fromString(Ljava/lang/String;)Lcom/onesignal/influence/domain/OSInfluenceChannel; = FromString(string)
  valueOf(Ljava/lang/String;)Lcom/onesignal/influence/domain/OSInfluenceChannel; = ValueOf(string)
  values()[Lcom/onesignal/influence/domain/OSInfluenceChannel; = Values()
com/onesignal/influence/domain/OSInfluenceType = Com.Onesignal.Influence.Domain.OSInfluenceType
  Companion = Companion
  DIRECT = Direct
  DISABLED = Disabled
  INDIRECT = Indirect
  UNATTRIBUTED = Unattributed
  isAttributed()Z = IsAttributed
  isDirect()Z = IsDirect
  isDisabled()Z = IsDisabled
  isIndirect()Z = IsIndirect
  isUnattributed()Z = IsUnattributed
  fromString(Ljava/lang/String;)Lcom/onesignal/influence/domain/OSInfluenceType; = FromString(string)
  valueOf(Ljava/lang/String;)Lcom/onesignal/influence/domain/OSInfluenceType; = ValueOf(string)
  values()[Lcom/onesignal/influence/domain/OSInfluenceType; = Values()
com/onesignal/IntentGeneratorForAttachingToNotifications = Com.OneSignal.Android.IntentGeneratorForAttachingToNotifications
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  getContext()Landroid/content/Context; = Context
  getNewActionPendingIntent(ILandroid/content/Intent;)Landroid/app/PendingIntent; = GetNewActionPendingIntent(int, Android.Content.Intent)
  getNewBaseIntent(I)Landroid/content/Intent; = GetNewBaseIntent(int)
com/onesignal/language/LanguageContext = Com.Onesignal.Language.LanguageContext
  <init>(Lcom/onesignal/OSSharedPreferences;)V = .ctor(Com.OneSignal.Android.IOSSharedPreferences)
  getInstance()Lcom/onesignal/language/LanguageContext; = Instance
  getLanguage()Ljava/lang/String; = Language
  setStrategy(Lcom/onesignal/language/LanguageProvider;)V = SetStrategy(Com.Onesignal.Language.ILanguageProvider)
com/onesignal/language/LanguageProvider = Com.Onesignal.Language.ILanguageProvider
  getLanguage()Ljava/lang/String; = Language
com/onesignal/language/LanguageProviderAppDefined = Com.Onesignal.Language.LanguageProviderAppDefined
  <init>(Lcom/onesignal/OSSharedPreferences;)V = .ctor(Com.OneSignal.Android.IOSSharedPreferences)
  PREFS_OS_LANGUAGE = PrefsOsLanguage
  getLanguage()Ljava/lang/String; = Language
  setLanguage(Ljava/lang/String;)V = Language
com/onesignal/language/LanguageProviderDevice = Com.Onesignal.Language.LanguageProviderDevice
  <init>()V = .ctor()
  getLanguage()Ljava/lang/String; = Language
com/onesignal/LocationPermissionController = Com.OneSignal.Android.LocationPermissionController
  INSTANCE = Instance
  onAccept()V = OnAccept()
  onReject(Z)V = OnReject(bool)
  prompt(ZLjava/lang/String;)V = Prompt(bool, string)
com/onesignal/NavigateToAndroidSettingsForLocation = Com.OneSignal.Android.NavigateToAndroidSettingsForLocation
  INSTANCE = Instance
  show(Landroid/content/Context;)V = Show(Android.Content.Context)
com/onesignal/NavigateToAndroidSettingsForNotifications = Com.OneSignal.Android.NavigateToAndroidSettingsForNotifications
  INSTANCE = Instance
  show(Landroid/content/Context;)V = Show(Android.Content.Context)
com/onesignal/NotificationDismissReceiver = Com.OneSignal.Android.NotificationDismissReceiver
  <init>()V = .ctor()
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
com/onesignal/NotificationOpenedActivityHMS = Com.OneSignal.Android.NotificationOpenedActivityHMS
  <init>()V = .ctor()
com/onesignal/NotificationOpenedReceiver = Com.OneSignal.Android.NotificationOpenedReceiver
  <init>()V = .ctor()
com/onesignal/NotificationOpenedReceiverAndroid22AndOlder = Com.OneSignal.Android.NotificationOpenedReceiverAndroid22AndOlder
  <init>()V = .ctor()
com/onesignal/NotificationOpenedReceiverBase = Com.OneSignal.Android.NotificationOpenedReceiverBase
  <init>()V = .ctor()
com/onesignal/NotificationPermissionController = Com.OneSignal.Android.NotificationPermissionController
  INSTANCE = Instance
  getSupportsNativePrompt()Z = SupportsNativePrompt
  onAccept()V = OnAccept()
  onAppForegrounded()V = OnAppForegrounded()
  onReject(Z)V = OnReject(bool)
  prompt(ZLcom/onesignal/OneSignal$PromptForPushNotificationPermissionResponseHandler;)V = Prompt(bool, Com.OneSignal.Android.OneSignal.IPromptForPushNotificationPermissionResponseHandler)
com/onesignal/OneSignal = Com.OneSignal.Android.OneSignal
  <init>()V = .ctor()
  sdkType = SdkType
  getDeviceState()Lcom/onesignal/OSDeviceState; = DeviceState
  isInAppMessagingPaused()Z = IsInAppMessagingPaused
  isLocationShared()Z = LocationShared
  setLocationShared(Z)V = LocationShared
  getSdkVersionRaw()Ljava/lang/String; = SdkVersionRaw
  getTriggers()Ljava/util/Map; = Triggers
  addEmailSubscriptionObserver(Lcom/onesignal/OSEmailSubscriptionObserver;)V = AddEmailSubscriptionObserver(Com.OneSignal.Android.IOSEmailSubscriptionObserver)
  addPermissionObserver(Lcom/onesignal/OSPermissionObserver;)V = AddPermissionObserver(Com.OneSignal.Android.IOSPermissionObserver)
  addSMSSubscriptionObserver(Lcom/onesignal/OSSMSSubscriptionObserver;)V = AddSMSSubscriptionObserver(Com.OneSignal.Android.IOSSMSSubscriptionObserver)
  addSubscriptionObserver(Lcom/onesignal/OSSubscriptionObserver;)V = AddSubscriptionObserver(Com.OneSignal.Android.IOSSubscriptionObserver)
  addTrigger(Ljava/lang/String;Ljava/lang/Object;)V = AddTrigger(string, Java.Lang.Object)
  addTriggers(Ljava/util/Map;)V = AddTriggers(System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  clearOneSignalNotifications()V = ClearOneSignalNotifications()
  deleteTag(Ljava/lang/String;)V = DeleteTag(string)
  deleteTag(Ljava/lang/String;Lcom/onesignal/OneSignal$ChangeTagsUpdateHandler;)V = DeleteTag(string, Com.OneSignal.Android.OneSignal.IChangeTagsUpdateHandler)
  deleteTags(Ljava/lang/String;)V = DeleteTags(string)
  deleteTags(Ljava/lang/String;Lcom/onesignal/OneSignal$ChangeTagsUpdateHandler;)V = DeleteTags(string, Com.OneSignal.Android.OneSignal.IChangeTagsUpdateHandler)
  deleteTags(Ljava/util/Collection;)V = DeleteTags(System.Collections.Generic.ICollection<string>)
  deleteTags(Ljava/util/Collection;Lcom/onesignal/OneSignal$ChangeTagsUpdateHandler;)V = DeleteTags(System.Collections.Generic.ICollection<string>, Com.OneSignal.Android.OneSignal.IChangeTagsUpdateHandler)
  deleteTags(Lorg/json/JSONArray;Lcom/onesignal/OneSignal$ChangeTagsUpdateHandler;)V = DeleteTags(Org.Json.JSONArray, Com.OneSignal.Android.OneSignal.IChangeTagsUpdateHandler)
  disableGMSMissingPrompt(Z)V = DisableGMSMissingPrompt(bool)
  disablePush(Z)V = DisablePush(bool)
  getTags(Lcom/onesignal/OneSignal$OSGetTagsHandler;)V = GetTags(Com.OneSignal.Android.OneSignal.IOSGetTagsHandler)
  getTriggerValueForKey(Ljava/lang/String;)Ljava/lang/Object; = GetTriggerValueForKey(string)
  initWithContext(Landroid/content/Context;)V = InitWithContext(Android.Content.Context)
  logoutEmail()V = LogoutEmail()
  logoutEmail(Lcom/onesignal/OneSignal$EmailUpdateHandler;)V = LogoutEmail(Com.OneSignal.Android.OneSignal.IEmailUpdateHandler)
  logoutSMSNumber()V = LogoutSMSNumber()
  logoutSMSNumber(Lcom/onesignal/OneSignal$OSSMSUpdateHandler;)V = LogoutSMSNumber(Com.OneSignal.Android.OneSignal.IOSSMSUpdateHandler)
  onesignalLog(Lcom/onesignal/OneSignal$LOG_LEVEL;Ljava/lang/String;)V = OnesignalLog(Com.OneSignal.Android.OneSignal.LOG_LEVEL, string)
  pauseInAppMessages(Z)V = PauseInAppMessages(bool)
  postNotification(Ljava/lang/String;Lcom/onesignal/OneSignal$PostNotificationResponseHandler;)V = PostNotification(string, Com.OneSignal.Android.OneSignal.IPostNotificationResponseHandler)
  postNotification(Lorg/json/JSONObject;Lcom/onesignal/OneSignal$PostNotificationResponseHandler;)V = PostNotification(Org.Json.JSONObject, Com.OneSignal.Android.OneSignal.IPostNotificationResponseHandler)
  promptForPushNotifications()V = PromptForPushNotifications()
  promptForPushNotifications(Z)V = PromptForPushNotifications(bool)
  promptForPushNotifications(ZLcom/onesignal/OneSignal$PromptForPushNotificationPermissionResponseHandler;)V = PromptForPushNotifications(bool, Com.OneSignal.Android.OneSignal.IPromptForPushNotificationPermissionResponseHandler)
  promptLocation()V = PromptLocation()
  provideUserConsent(Z)V = ProvideUserConsent(bool)
  removeEmailSubscriptionObserver(Lcom/onesignal/OSEmailSubscriptionObserver;)V = RemoveEmailSubscriptionObserver(Com.OneSignal.Android.IOSEmailSubscriptionObserver)
  removeExternalUserId()V = RemoveExternalUserId()
  removeExternalUserId(Lcom/onesignal/OneSignal$OSExternalUserIdUpdateCompletionHandler;)V = RemoveExternalUserId(Com.OneSignal.Android.OneSignal.IOSExternalUserIdUpdateCompletionHandler)
  removeGroupedNotifications(Ljava/lang/String;)V = RemoveGroupedNotifications(string)
  removeNotification(I)V = RemoveNotification(int)
  removePermissionObserver(Lcom/onesignal/OSPermissionObserver;)V = RemovePermissionObserver(Com.OneSignal.Android.IOSPermissionObserver)
  removeSMSSubscriptionObserver(Lcom/onesignal/OSSMSSubscriptionObserver;)V = RemoveSMSSubscriptionObserver(Com.OneSignal.Android.IOSSMSSubscriptionObserver)
  removeSubscriptionObserver(Lcom/onesignal/OSSubscriptionObserver;)V = RemoveSubscriptionObserver(Com.OneSignal.Android.IOSSubscriptionObserver)
  removeTriggerForKey(Ljava/lang/String;)V = RemoveTriggerForKey(string)
  removeTriggersForKeys(Ljava/util/Collection;)V = RemoveTriggersForKeys(System.Collections.Generic.ICollection<string>)
  requiresUserPrivacyConsent()Z = RequiresUserPrivacyConsent()
  sendOutcome(Ljava/lang/String;)V = SendOutcome(string)
  sendOutcome(Ljava/lang/String;Lcom/onesignal/OneSignal$OutcomeCallback;)V = SendOutcome(string, Com.OneSignal.Android.OneSignal.IOutcomeCallback)
  sendOutcomeWithValue(Ljava/lang/String;F)V = SendOutcomeWithValue(string, float)
  sendOutcomeWithValue(Ljava/lang/String;FLcom/onesignal/OneSignal$OutcomeCallback;)V = SendOutcomeWithValue(string, float, Com.OneSignal.Android.OneSignal.IOutcomeCallback)
  sendTag(Ljava/lang/String;Ljava/lang/String;)V = SendTag(string, string)
  sendTags(Ljava/lang/String;)V = SendTags(string)
  sendTags(Lorg/json/JSONObject;)V = SendTags(Org.Json.JSONObject)
  sendTags(Lorg/json/JSONObject;Lcom/onesignal/OneSignal$ChangeTagsUpdateHandler;)V = SendTags(Org.Json.JSONObject, Com.OneSignal.Android.OneSignal.IChangeTagsUpdateHandler)
  sendUniqueOutcome(Ljava/lang/String;)V = SendUniqueOutcome(string)
  sendUniqueOutcome(Ljava/lang/String;Lcom/onesignal/OneSignal$OutcomeCallback;)V = SendUniqueOutcome(string, Com.OneSignal.Android.OneSignal.IOutcomeCallback)
  setAppId(Ljava/lang/String;)V = SetAppId(string)
  setEmail(Ljava/lang/String;)V = SetEmail(string)
  setEmail(Ljava/lang/String;Lcom/onesignal/OneSignal$EmailUpdateHandler;)V = SetEmail(string, Com.OneSignal.Android.OneSignal.IEmailUpdateHandler)
  setEmail(Ljava/lang/String;Ljava/lang/String;)V = SetEmail(string, string)
  setEmail(Ljava/lang/String;Ljava/lang/String;Lcom/onesignal/OneSignal$EmailUpdateHandler;)V = SetEmail(string, string, Com.OneSignal.Android.OneSignal.IEmailUpdateHandler)
  setExternalUserId(Ljava/lang/String;)V = SetExternalUserId(string)
  setExternalUserId(Ljava/lang/String;Lcom/onesignal/OneSignal$OSExternalUserIdUpdateCompletionHandler;)V = SetExternalUserId(string, Com.OneSignal.Android.OneSignal.IOSExternalUserIdUpdateCompletionHandler)
  setExternalUserId(Ljava/lang/String;Ljava/lang/String;)V = SetExternalUserId(string, string)
  setExternalUserId(Ljava/lang/String;Ljava/lang/String;Lcom/onesignal/OneSignal$OSExternalUserIdUpdateCompletionHandler;)V = SetExternalUserId(string, string, Com.OneSignal.Android.OneSignal.IOSExternalUserIdUpdateCompletionHandler)
  setInAppMessageClickHandler(Lcom/onesignal/OneSignal$OSInAppMessageClickHandler;)V = SetInAppMessageClickHandler(Com.OneSignal.Android.OneSignal.IOSInAppMessageClickHandler)
  setInAppMessageLifecycleHandler(Lcom/onesignal/OSInAppMessageLifecycleHandler;)V = SetInAppMessageLifecycleHandler(Com.OneSignal.Android.OSInAppMessageLifecycleHandler)
  setLanguage(Ljava/lang/String;)V = SetLanguage(string)
  setLanguage(Ljava/lang/String;Lcom/onesignal/OneSignal$OSSetLanguageCompletionHandler;)V = SetLanguage(string, Com.OneSignal.Android.OneSignal.IOSSetLanguageCompletionHandler)
  setLogLevel(Lcom/onesignal/OneSignal$LOG_LEVEL;Lcom/onesignal/OneSignal$LOG_LEVEL;)V = SetLogLevel(Com.OneSignal.Android.OneSignal.LOG_LEVEL, Com.OneSignal.Android.OneSignal.LOG_LEVEL)
  setLogLevel(II)V = SetLogLevel(int, int)
  setNotificationOpenedHandler(Lcom/onesignal/OneSignal$OSNotificationOpenedHandler;)V = SetNotificationOpenedHandler(Com.OneSignal.Android.OneSignal.IOSNotificationOpenedHandler)
  setNotificationWillShowInForegroundHandler(Lcom/onesignal/OneSignal$OSNotificationWillShowInForegroundHandler;)V = SetNotificationWillShowInForegroundHandler(Com.OneSignal.Android.OneSignal.IOSNotificationWillShowInForegroundHandler)
  setRequiresUserPrivacyConsent(Z)V = SetRequiresUserPrivacyConsent(bool)
  setSMSNumber(Ljava/lang/String;)V = SetSMSNumber(string)
  setSMSNumber(Ljava/lang/String;Lcom/onesignal/OneSignal$OSSMSUpdateHandler;)V = SetSMSNumber(string, Com.OneSignal.Android.OneSignal.IOSSMSUpdateHandler)
  setSMSNumber(Ljava/lang/String;Ljava/lang/String;)V = SetSMSNumber(string, string)
  setSMSNumber(Ljava/lang/String;Ljava/lang/String;Lcom/onesignal/OneSignal$OSSMSUpdateHandler;)V = SetSMSNumber(string, string, Com.OneSignal.Android.OneSignal.IOSSMSUpdateHandler)
  unsubscribeWhenNotificationsAreDisabled(Z)V = UnsubscribeWhenNotificationsAreDisabled(bool)
  userProvidedPrivacyConsent()Z = UserProvidedPrivacyConsent()
com/onesignal/OneSignalAPIClient = Com.OneSignal.Android.IOneSignalAPIClient
  get(Ljava/lang/String;Lcom/onesignal/OneSignalApiResponseHandler;Ljava/lang/String;)V = Get(string, Com.OneSignal.Android.IOneSignalApiResponseHandler, string)
  getSync(Ljava/lang/String;Lcom/onesignal/OneSignalApiResponseHandler;Ljava/lang/String;)V = GetSync(string, Com.OneSignal.Android.IOneSignalApiResponseHandler, string)
  post(Ljava/lang/String;Lorg/json/JSONObject;Lcom/onesignal/OneSignalApiResponseHandler;)V = Post(string, Org.Json.JSONObject, Com.OneSignal.Android.IOneSignalApiResponseHandler)
  postSync(Ljava/lang/String;Lorg/json/JSONObject;Lcom/onesignal/OneSignalApiResponseHandler;)V = PostSync(string, Org.Json.JSONObject, Com.OneSignal.Android.IOneSignalApiResponseHandler)
  put(Ljava/lang/String;Lorg/json/JSONObject;Lcom/onesignal/OneSignalApiResponseHandler;)V = Put(string, Org.Json.JSONObject, Com.OneSignal.Android.IOneSignalApiResponseHandler)
  putSync(Ljava/lang/String;Lorg/json/JSONObject;Lcom/onesignal/OneSignalApiResponseHandler;)V = PutSync(string, Org.Json.JSONObject, Com.OneSignal.Android.IOneSignalApiResponseHandler)
com/onesignal/OneSignalApiResponseHandler = Com.OneSignal.Android.IOneSignalApiResponseHandler
  onFailure(ILjava/lang/String;Ljava/lang/Throwable;)V = OnFailure(int, string, Java.Lang.Throwable)
  onSuccess(Ljava/lang/String;)V = OnSuccess(string)
com/onesignal/OneSignalDb = Com.OneSignal.Android.IOneSignalDb
  delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V = Delete(string, string, string[])
  insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)V = Insert(string, string, Android.Content.ContentValues)
  insertOrThrow(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)V = InsertOrThrow(string, string, Android.Content.ContentValues)
  query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; = Query(string, string[], string, string[], string, string, string)
  query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; = Query(string, string[], string, string[], string, string, string, string)
  update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I = Update(string, Android.Content.ContentValues, string, string[])
com/onesignal/OneSignalHmsEventBridge = Com.OneSignal.Android.OneSignalHmsEventBridge
  <init>()V = .ctor()
  HMS_SENT_TIME_KEY = HmsSentTimeKey
  HMS_TTL_KEY = HmsTtlKey
  onNewToken(Landroid/content/Context;Ljava/lang/String;)V = OnNewToken(Android.Content.Context, string)
  onNewToken(Landroid/content/Context;Ljava/lang/String;Landroid/os/Bundle;)V = OnNewToken(Android.Content.Context, string, Android.OS.Bundle)
com/onesignal/OneSignalNotificationManager = Com.OneSignal.Android.OneSignalNotificationManager
  <init>()V = .ctor()
  areNotificationsEnabled(Landroid/content/Context;Ljava/lang/String;)Z = AreNotificationsEnabled(Android.Content.Context, string)
com/onesignal/OneSignalRemoteParams = Com.OneSignal.Android.OneSignalRemoteParams
  <init>()V = .ctor()
  DEFAULT_INDIRECT_ATTRIBUTION_WINDOW = DefaultIndirectAttributionWindow
  DEFAULT_NOTIFICATION_LIMIT = DefaultNotificationLimit
com/onesignal/OSBackgroundManager = Com.OneSignal.Android.OSBackgroundManager
  <init>()V = .ctor()
  runRunnableOnThread(Ljava/lang/Runnable;Ljava/lang/String;)V = RunRunnableOnThread(Java.Lang.IRunnable, string)
com/onesignal/OSDeviceState = Com.OneSignal.Android.OSDeviceState
  getEmailAddress()Ljava/lang/String; = EmailAddress
  getEmailUserId()Ljava/lang/String; = EmailUserId
  isEmailSubscribed()Z = IsEmailSubscribed
  isPushDisabled()Z = IsPushDisabled
  isSMSSubscribed()Z = IsSMSSubscribed
  isSubscribed()Z = IsSubscribed
  getPushToken()Ljava/lang/String; = PushToken
  getSMSNumber()Ljava/lang/String; = SMSNumber
  getSMSUserId()Ljava/lang/String; = SMSUserId
  getUserId()Ljava/lang/String; = UserId
  areNotificationsEnabled()Z = AreNotificationsEnabled()
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSEmailSubscriptionObserver = Com.OneSignal.Android.IOSEmailSubscriptionObserver
  onOSEmailSubscriptionChanged(Lcom/onesignal/OSEmailSubscriptionStateChanges;)V = OnOSEmailSubscriptionChanged(Com.OneSignal.Android.OSEmailSubscriptionStateChanges)
com/onesignal/OSEmailSubscriptionState = Com.OneSignal.Android.OSEmailSubscriptionState
  getEmailAddress()Ljava/lang/String; = EmailAddress
  getEmailUserId()Ljava/lang/String; = EmailUserId
  isSubscribed()Z = IsSubscribed
  getObservable()Ljava/lang/Object; = Observable
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSEmailSubscriptionStateChanges = Com.OneSignal.Android.OSEmailSubscriptionStateChanges
  <init>(Lcom/onesignal/OSEmailSubscriptionState;Lcom/onesignal/OSEmailSubscriptionState;)V = .ctor(Com.OneSignal.Android.OSEmailSubscriptionState, Com.OneSignal.Android.OSEmailSubscriptionState)
  getFrom()Lcom/onesignal/OSEmailSubscriptionState; = From
  getTo()Lcom/onesignal/OSEmailSubscriptionState; = To
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSFocusHandler = Com.OneSignal.Android.OSFocusHandler
  <init>()V = .ctor()
  Companion = Companion
  hasBackgrounded()Z = HasBackgrounded
  hasCompleted()Z = HasCompleted
  cancelOnLostFocusWorker(Ljava/lang/String;Landroid/content/Context;)V = CancelOnLostFocusWorker(string, Android.Content.Context)
  startOnFocusWork()V = StartOnFocusWork()
  startOnLostFocusWorker(Ljava/lang/String;JLandroid/content/Context;)V = StartOnLostFocusWorker(string, long, Android.Content.Context)
  startOnStartFocusWork()V = StartOnStartFocusWork()
  startOnStopFocusWork()V = StartOnStopFocusWork()
com/onesignal/OSInAppMessage = Com.OneSignal.Android.OSInAppMessage
  IAM_ID = IamId
  messageId = MessageId
  getMessageId()Ljava/lang/String; = MessageId
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSInAppMessageAction = Com.OneSignal.Android.OSInAppMessageAction
  getClickName()Ljava/lang/String; = ClickName
  getClickUrl()Ljava/lang/String; = ClickUrl
  isFirstClick()Z = IsFirstClick
  getOutcomes()Ljava/util/List; = Outcomes
  getPrompts()Ljava/util/List; = Prompts
  getTags()Lcom/onesignal/OSInAppMessageTag; = Tags
  getUrlTarget()Lcom/onesignal/OSInAppMessageAction$OSInAppMessageActionUrlType; = UrlTarget
  doesCloseMessage()Z = DoesCloseMessage()
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSInAppMessageContentKt = Com.OneSignal.Android.OSInAppMessageContentKt
  DISPLAY_DURATION = DisplayDuration
  HTML = Html
  REMOVE_HEIGHT_MARGIN = RemoveHeightMargin
  REMOVE_WIDTH_MARGIN = RemoveWidthMargin
  STYLES = Styles
com/onesignal/OSInAppMessageLifecycleHandler = Com.OneSignal.Android.OSInAppMessageLifecycleHandler
  <init>()V = .ctor()
  onDidDismissInAppMessage(Lcom/onesignal/OSInAppMessage;)V = OnDidDismissInAppMessage(Com.OneSignal.Android.OSInAppMessage)
  onDidDisplayInAppMessage(Lcom/onesignal/OSInAppMessage;)V = OnDidDisplayInAppMessage(Com.OneSignal.Android.OSInAppMessage)
  onWillDismissInAppMessage(Lcom/onesignal/OSInAppMessage;)V = OnWillDismissInAppMessage(Com.OneSignal.Android.OSInAppMessage)
  onWillDisplayInAppMessage(Lcom/onesignal/OSInAppMessage;)V = OnWillDisplayInAppMessage(Com.OneSignal.Android.OSInAppMessage)
com/onesignal/OSInAppMessageOutcome = Com.OneSignal.Android.OSInAppMessageOutcome
  getName()Ljava/lang/String; = Name
  setName(Ljava/lang/String;)V = Name
  isUnique()Z = Unique
  setUnique(Z)V = Unique
  getWeight()F = Weight
  setWeight(F)V = Weight
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSInAppMessagePageKt = Com.OneSignal.Android.OSInAppMessagePageKt
  PAGE_ID = PageId
  PAGE_INDEX = PageIndex
com/onesignal/OSInAppMessagePrompt = Com.OneSignal.Android.OSInAppMessagePrompt
com/onesignal/OSInAppMessagePushPrompt = Com.OneSignal.Android.OSInAppMessagePushPrompt
  <init>()V = .ctor()
com/onesignal/OSInAppMessageTag = Com.OneSignal.Android.OSInAppMessageTag
  getTagsToAdd()Lorg/json/JSONObject; = TagsToAdd
  setTagsToAdd(Lorg/json/JSONObject;)V = TagsToAdd
  getTagsToRemove()Lorg/json/JSONArray; = TagsToRemove
  setTagsToRemove(Lorg/json/JSONArray;)V = TagsToRemove
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSLogger = Com.OneSignal.Android.IOSLogger
  debug(Ljava/lang/String;)V = Debug(string)
  error(Ljava/lang/String;)V = Error(string)
  error(Ljava/lang/String;Ljava/lang/Throwable;)V = Error(string, Java.Lang.Throwable)
  info(Ljava/lang/String;)V = Info(string)
  verbose(Ljava/lang/String;)V = Verbose(string)
  warning(Ljava/lang/String;)V = Warning(string)
com/onesignal/OSMutableNotification = Com.OneSignal.Android.OSMutableNotification
  setAndroidNotificationId(I)V = SetAndroidNotificationId(int)
com/onesignal/OSNotification = Com.OneSignal.Android.OSNotification
  <init>()V = .ctor()
  <init>(Lcom/onesignal/OSNotification;)V = .ctor(Com.OneSignal.Android.OSNotification)
  getActionButtons()Ljava/util/List; = ActionButtons
  getAdditionalData()Lorg/json/JSONObject; = AdditionalData
  getAndroidNotificationId()I = AndroidNotificationId
  getBigPicture()Ljava/lang/String; = BigPicture
  getBody()Ljava/lang/String; = Body
  getCollapseId()Ljava/lang/String; = CollapseId
  getFromProjectNumber()Ljava/lang/String; = FromProjectNumber
  getGroupedNotifications()Ljava/util/List; = GroupedNotifications
  getGroupKey()Ljava/lang/String; = GroupKey
  getGroupMessage()Ljava/lang/String; = GroupMessage
  getLargeIcon()Ljava/lang/String; = LargeIcon
  getLaunchURL()Ljava/lang/String; = LaunchURL
  getLedColor()Ljava/lang/String; = LedColor
  getLockScreenVisibility()I = LockScreenVisibility
  getNotificationId()Ljava/lang/String; = NotificationId
  getPriority()I = Priority
  getRawPayload()Ljava/lang/String; = RawPayload
  getSentTime()J = SentTime
  getSmallIcon()Ljava/lang/String; = SmallIcon
  getSmallIconAccentColor()Ljava/lang/String; = SmallIconAccentColor
  getSound()Ljava/lang/String; = Sound
  getTemplateId()Ljava/lang/String; = TemplateId
  getTemplateName()Ljava/lang/String; = TemplateName
  getTitle()Ljava/lang/String; = Title
  getTtl()I = Ttl
  getBackgroundImageLayout()Lcom/onesignal/OSNotification$BackgroundImageLayout; = GetBackgroundImageLayout()
  mutableCopy()Lcom/onesignal/OSMutableNotification; = MutableCopy()
  setAndroidNotificationId(I)V = SetAndroidNotificationId(int)
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSNotificationAction = Com.OneSignal.Android.OSNotificationAction
  <init>(Lcom/onesignal/OSNotificationAction$ActionType;Ljava/lang/String;)V = .ctor(Com.OneSignal.Android.OSNotificationAction.ActionType, string)
  getActionId()Ljava/lang/String; = ActionId
  getType()Lcom/onesignal/OSNotificationAction$ActionType; = Type
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSNotificationController = Com.OneSignal.Android.OSNotificationController
  isFromBackgroundLogic()Z = FromBackgroundLogic
  setFromBackgroundLogic(Z)V = FromBackgroundLogic
  isNotificationWithinTTL()Z = IsNotificationWithinTTL
  getNotificationJob()Lcom/onesignal/OSNotificationGenerationJob; = NotificationJob
  getNotificationReceivedEvent()Lcom/onesignal/OSNotificationReceivedEvent; = NotificationReceivedEvent
  isRestoring()Z = Restoring
  setRestoring(Z)V = Restoring
com/onesignal/OSNotificationGenerationJob = Com.OneSignal.Android.OSNotificationGenerationJob
  getContext()Landroid/content/Context; = Context
  setContext(Landroid/content/Context;)V = Context
  getJsonPayload()Lorg/json/JSONObject; = JsonPayload
  setJsonPayload(Lorg/json/JSONObject;)V = JsonPayload
  getNotification()Lcom/onesignal/OSNotification; = Notification
  setNotification(Lcom/onesignal/OSNotification;)V = Notification
  getOrgFlags()Ljava/lang/Integer; = OrgFlags
  setOrgFlags(Ljava/lang/Integer;)V = OrgFlags
  getOrgSound()Landroid/net/Uri; = OrgSound
  setOrgSound(Landroid/net/Uri;)V = OrgSound
  getOverriddenBodyFromExtender()Ljava/lang/CharSequence; = OverriddenBodyFromExtender
  setOverriddenBodyFromExtender(Ljava/lang/CharSequence;)V = OverriddenBodyFromExtender
  getOverriddenFlags()Ljava/lang/Integer; = OverriddenFlags
  setOverriddenFlags(Ljava/lang/Integer;)V = OverriddenFlags
  getOverriddenSound()Landroid/net/Uri; = OverriddenSound
  setOverriddenSound(Landroid/net/Uri;)V = OverriddenSound
  getOverriddenTitleFromExtender()Ljava/lang/CharSequence; = OverriddenTitleFromExtender
  setOverriddenTitleFromExtender(Ljava/lang/CharSequence;)V = OverriddenTitleFromExtender
  isRestoring()Z = Restoring
  setRestoring(Z)V = Restoring
  getShownTimeStamp()Ljava/lang/Long; = ShownTimeStamp
  setShownTimeStamp(Ljava/lang/Long;)V = ShownTimeStamp
com/onesignal/OSNotificationIntentExtras = Com.OneSignal.Android.OSNotificationIntentExtras
  <init>(Lorg/json/JSONArray;Lorg/json/JSONObject;)V = .ctor(Org.Json.JSONArray, Org.Json.JSONObject)
  getDataArray()Lorg/json/JSONArray; = DataArray
  setDataArray(Lorg/json/JSONArray;)V = DataArray
  getJsonData()Lorg/json/JSONObject; = JsonData
  setJsonData(Lorg/json/JSONObject;)V = JsonData
  component1()Lorg/json/JSONArray; = Component1()
  component2()Lorg/json/JSONObject; = Component2()
  copy(Lorg/json/JSONArray;Lorg/json/JSONObject;)Lcom/onesignal/OSNotificationIntentExtras; = Copy(Org.Json.JSONArray, Org.Json.JSONObject)
com/onesignal/OSNotificationOpenAppSettings = Com.OneSignal.Android.OSNotificationOpenAppSettings
  INSTANCE = Instance
  getShouldOpenActivity(Landroid/content/Context;)Z = GetShouldOpenActivity(Android.Content.Context)
  getSuppressLaunchURL(Landroid/content/Context;)Z = GetSuppressLaunchURL(Android.Content.Context)
com/onesignal/OSNotificationOpenBehaviorFromPushPayload = Com.OneSignal.Android.OSNotificationOpenBehaviorFromPushPayload
  <init>(Landroid/content/Context;Lorg/json/JSONObject;)V = .ctor(Android.Content.Context, Org.Json.JSONObject)
  getShouldOpenApp()Z = ShouldOpenApp
  getUri()Landroid/net/Uri; = Uri
com/onesignal/OSNotificationOpenedResult = Com.OneSignal.Android.OSNotificationOpenedResult
  <init>(Lcom/onesignal/OSNotification;Lcom/onesignal/OSNotificationAction;)V = .ctor(Com.OneSignal.Android.OSNotification, Com.OneSignal.Android.OSNotificationAction)
  getAction()Lcom/onesignal/OSNotificationAction; = Action
  getNotification()Lcom/onesignal/OSNotification; = Notification
  onEntryStateChange(Lcom/onesignal/OneSignal$AppEntryAction;)V = OnEntryStateChange(Com.OneSignal.Android.OneSignal.AppEntryAction)
  stringify()Ljava/lang/String; = Stringify()
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSNotificationReceivedEvent = Com.OneSignal.Android.OSNotificationReceivedEvent
  getNotification()Lcom/onesignal/OSNotification; = Notification
  complete(Lcom/onesignal/OSNotification;)V = Complete(Com.OneSignal.Android.OSNotification)
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSOutcomeEvent = Com.OneSignal.Android.OSOutcomeEvent
  <init>(Lcom/onesignal/influence/domain/OSInfluenceType;Lorg/json/JSONArray;Ljava/lang/String;JF)V = .ctor(Com.Onesignal.Influence.Domain.OSInfluenceType, Org.Json.JSONArray, string, long, float)
  getName()Ljava/lang/String; = Name
  getNotificationIds()Lorg/json/JSONArray; = NotificationIds
  getSession()Lcom/onesignal/influence/domain/OSInfluenceType; = Session
  getTimestamp()J = Timestamp
  getWeight()F = Weight
  fromOutcomeEventParamsV2toOutcomeEventV1(Lcom/onesignal/outcomes/domain/OSOutcomeEventParams;)Lcom/onesignal/OSOutcomeEvent; = FromOutcomeEventParamsV2toOutcomeEventV1(Com.Onesignal.Outcomes.Domain.OSOutcomeEventParams)
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
  toJSONObjectForMeasure()Lorg/json/JSONObject; = ToJSONObjectForMeasure()
com/onesignal/OSPermissionObserver = Com.OneSignal.Android.IOSPermissionObserver
  onOSPermissionChanged(Lcom/onesignal/OSPermissionStateChanges;)V = OnOSPermissionChanged(Com.OneSignal.Android.OSPermissionStateChanges)
com/onesignal/OSPermissionState = Com.OneSignal.Android.OSPermissionState
  getObservable()Ljava/lang/Object; = Observable
  areNotificationsEnabled()Z = AreNotificationsEnabled()
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSPermissionStateChanges = Com.OneSignal.Android.OSPermissionStateChanges
  <init>(Lcom/onesignal/OSPermissionState;Lcom/onesignal/OSPermissionState;)V = .ctor(Com.OneSignal.Android.OSPermissionState, Com.OneSignal.Android.OSPermissionState)
  getFrom()Lcom/onesignal/OSPermissionState; = From
  getTo()Lcom/onesignal/OSPermissionState; = To
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSSessionManager = Com.OneSignal.Android.OSSessionManager
  <init>(Lcom/onesignal/OSSessionManager$SessionListener;Lcom/onesignal/influence/data/OSTrackerFactory;Lcom/onesignal/OSLogger;)V = .ctor(Com.OneSignal.Android.OSSessionManager.ISessionListener, Com.Onesignal.Influence.Data.OSTrackerFactory, Com.OneSignal.Android.IOSLogger)
  trackerFactory = TrackerFactory
com/onesignal/OSSharedPreferences = Com.OneSignal.Android.IOSSharedPreferences
  getOutcomesV2KeyName()Ljava/lang/String; = OutcomesV2KeyName
  getPreferencesName()Ljava/lang/String; = PreferencesName
  getBool(Ljava/lang/String;Ljava/lang/String;Z)Z = GetBool(string, string, bool)
  getInt(Ljava/lang/String;Ljava/lang/String;I)I = GetInt(string, string, int)
  getLong(Ljava/lang/String;Ljava/lang/String;J)J = GetLong(string, string, long)
  getObject(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; = GetObject(string, string, Java.Lang.Object)
  getString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = GetString(string, string, string)
  getStringSet(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set; = GetStringSet(string, string, System.Collections.Generic.ICollection<string>)
  saveBool(Ljava/lang/String;Ljava/lang/String;Z)V = SaveBool(string, string, bool)
  saveInt(Ljava/lang/String;Ljava/lang/String;I)V = SaveInt(string, string, int)
  saveLong(Ljava/lang/String;Ljava/lang/String;J)V = SaveLong(string, string, long)
  saveObject(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V = SaveObject(string, string, Java.Lang.Object)
  saveString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = SaveString(string, string, string)
  saveStringSet(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V = SaveStringSet(string, string, System.Collections.Generic.ICollection<string>)
com/onesignal/OSSMSSubscriptionObserver = Com.OneSignal.Android.IOSSMSSubscriptionObserver
  onSMSSubscriptionChanged(Lcom/onesignal/OSSMSSubscriptionStateChanges;)V = OnSMSSubscriptionChanged(Com.OneSignal.Android.OSSMSSubscriptionStateChanges)
com/onesignal/OSSMSSubscriptionState = Com.OneSignal.Android.OSSMSSubscriptionState
  isSubscribed()Z = IsSubscribed
  getObservable()Ljava/lang/Object; = Observable
  getSMSNumber()Ljava/lang/String; = SMSNumber
  getSmsUserId()Ljava/lang/String; = SmsUserId
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSSMSSubscriptionStateChanges = Com.OneSignal.Android.OSSMSSubscriptionStateChanges
  <init>(Lcom/onesignal/OSSMSSubscriptionState;Lcom/onesignal/OSSMSSubscriptionState;)V = .ctor(Com.OneSignal.Android.OSSMSSubscriptionState, Com.OneSignal.Android.OSSMSSubscriptionState)
  getFrom()Lcom/onesignal/OSSMSSubscriptionState; = From
  getTo()Lcom/onesignal/OSSMSSubscriptionState; = To
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSSubscriptionObserver = Com.OneSignal.Android.IOSSubscriptionObserver
  onOSSubscriptionChanged(Lcom/onesignal/OSSubscriptionStateChanges;)V = OnOSSubscriptionChanged(Com.OneSignal.Android.OSSubscriptionStateChanges)
com/onesignal/OSSubscriptionState = Com.OneSignal.Android.OSSubscriptionState
  isPushDisabled()Z = IsPushDisabled
  isSubscribed()Z = IsSubscribed
  getObservable()Ljava/lang/Object; = Observable
  getPushToken()Ljava/lang/String; = PushToken
  getUserId()Ljava/lang/String; = UserId
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSSubscriptionStateChanges = Com.OneSignal.Android.OSSubscriptionStateChanges
  <init>(Lcom/onesignal/OSSubscriptionState;Lcom/onesignal/OSSubscriptionState;)V = .ctor(Com.OneSignal.Android.OSSubscriptionState, Com.OneSignal.Android.OSSubscriptionState)
  getFrom()Lcom/onesignal/OSSubscriptionState; = From
  getTo()Lcom/onesignal/OSSubscriptionState; = To
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/OSTime = Com.OneSignal.Android.IOSTime
  getCurrentTimeMillis()J = CurrentTimeMillis
  getElapsedRealtime()J = ElapsedRealtime
com/onesignal/OSTimeImpl = Com.OneSignal.Android.OSTimeImpl
  <init>()V = .ctor()
  getCurrentTimeMillis()J = CurrentTimeMillis
  getElapsedRealtime()J = ElapsedRealtime
com/onesignal/OSWebView = Com.OneSignal.Android.OSWebView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  overScrollBy(IIIIIIIIZ)Z = OverScrollBy(int, int, int, int, int, int, int, int, bool)
com/onesignal/outcomes/data/OSOutcomeEventsFactory = Com.Onesignal.Outcomes.Data.OSOutcomeEventsFactory
  <init>(Lcom/onesignal/OSLogger;Lcom/onesignal/OneSignalAPIClient;Lcom/onesignal/OneSignalDb;Lcom/onesignal/OSSharedPreferences;)V = .ctor(Com.OneSignal.Android.IOSLogger, Com.OneSignal.Android.IOneSignalAPIClient, Com.OneSignal.Android.IOneSignalDb, Com.OneSignal.Android.IOSSharedPreferences)
com/onesignal/outcomes/data/OSOutcomeTableProvider = Com.Onesignal.Outcomes.Data.OSOutcomeTableProvider
  <init>()V = .ctor()
  upgradeCacheOutcomeTableRevision1To2(Landroid/database/sqlite/SQLiteDatabase;)V = UpgradeCacheOutcomeTableRevision1To2(Android.Database.Sqlite.SQLiteDatabase)
  upgradeOutcomeTableRevision1To2(Landroid/database/sqlite/SQLiteDatabase;)V = UpgradeOutcomeTableRevision1To2(Android.Database.Sqlite.SQLiteDatabase)
  upgradeOutcomeTableRevision2To3(Landroid/database/sqlite/SQLiteDatabase;)V = UpgradeOutcomeTableRevision2To3(Android.Database.Sqlite.SQLiteDatabase)
com/onesignal/outcomes/data/OutcomeEventsService = Com.Onesignal.Outcomes.Data.IOutcomeEventsService
  sendOutcomeEvent(Lorg/json/JSONObject;Lcom/onesignal/OneSignalApiResponseHandler;)V = SendOutcomeEvent(Org.Json.JSONObject, Com.OneSignal.Android.IOneSignalApiResponseHandler)
com/onesignal/outcomes/domain/OSCachedUniqueOutcome = Com.Onesignal.Outcomes.Domain.OSCachedUniqueOutcome
  <init>(Ljava/lang/String;Lcom/onesignal/influence/domain/OSInfluenceChannel;)V = .ctor(string, Com.Onesignal.Influence.Domain.OSInfluenceChannel)
com/onesignal/outcomes/domain/OSOutcomeEventParams = Com.Onesignal.Outcomes.Domain.OSOutcomeEventParams
  <init>(Ljava/lang/String;Lcom/onesignal/outcomes/domain/OSOutcomeSource;FJ)V = .ctor(string, Com.Onesignal.Outcomes.Domain.OSOutcomeSource, float, long)
  isUnattributed()Z = IsUnattributed
  getOutcomeId()Ljava/lang/String; = OutcomeId
  getOutcomeSource()Lcom/onesignal/outcomes/domain/OSOutcomeSource; = OutcomeSource
  getTimestamp()J = Timestamp
  setTimestamp(J)V = Timestamp
  getWeight()F = Weight
  setWeight(F)V = Weight
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/outcomes/domain/OSOutcomeEventsRepository = Com.Onesignal.Outcomes.Domain.IOSOutcomeEventsRepository
  getSavedOutcomeEvents()Ljava/util/List; = SavedOutcomeEvents
  getUnattributedUniqueOutcomeEventsSent()Ljava/util/Set; = UnattributedUniqueOutcomeEventsSent
  cleanCachedUniqueOutcomeEventNotifications(Ljava/lang/String;Ljava/lang/String;)V = CleanCachedUniqueOutcomeEventNotifications(string, string)
  getNotCachedUniqueOutcome(Ljava/lang/String;Ljava/util/List;)Ljava/util/List; = GetNotCachedUniqueOutcome(string, System.Collections.Generic.IList<Com.Onesignal.Influence.Domain.OSInfluence>)
  removeEvent(Lcom/onesignal/outcomes/domain/OSOutcomeEventParams;)V = RemoveEvent(Com.Onesignal.Outcomes.Domain.OSOutcomeEventParams)
  requestMeasureOutcomeEvent(Ljava/lang/String;ILcom/onesignal/outcomes/domain/OSOutcomeEventParams;Lcom/onesignal/OneSignalApiResponseHandler;)V = RequestMeasureOutcomeEvent(string, int, Com.Onesignal.Outcomes.Domain.OSOutcomeEventParams, Com.OneSignal.Android.IOneSignalApiResponseHandler)
  saveOutcomeEvent(Lcom/onesignal/outcomes/domain/OSOutcomeEventParams;)V = SaveOutcomeEvent(Com.Onesignal.Outcomes.Domain.OSOutcomeEventParams)
  saveUnattributedUniqueOutcomeEventsSent(Ljava/util/Set;)V = SaveUnattributedUniqueOutcomeEventsSent(System.Collections.Generic.ICollection<string>)
  saveUniqueOutcomeNotifications(Lcom/onesignal/outcomes/domain/OSOutcomeEventParams;)V = SaveUniqueOutcomeNotifications(Com.Onesignal.Outcomes.Domain.OSOutcomeEventParams)
com/onesignal/outcomes/domain/OSOutcomeSource = Com.Onesignal.Outcomes.Domain.OSOutcomeSource
  <init>(Lcom/onesignal/outcomes/domain/OSOutcomeSourceBody;Lcom/onesignal/outcomes/domain/OSOutcomeSourceBody;)V = .ctor(Com.Onesignal.Outcomes.Domain.OSOutcomeSourceBody, Com.Onesignal.Outcomes.Domain.OSOutcomeSourceBody)
  getDirectBody()Lcom/onesignal/outcomes/domain/OSOutcomeSourceBody; = DirectBody
  setDirectBody(Lcom/onesignal/outcomes/domain/OSOutcomeSourceBody;)V = DirectBody
  getIndirectBody()Lcom/onesignal/outcomes/domain/OSOutcomeSourceBody; = IndirectBody
  setIndirectBody(Lcom/onesignal/outcomes/domain/OSOutcomeSourceBody;)V = IndirectBody
  setDirectBody(Lcom/onesignal/outcomes/domain/OSOutcomeSourceBody;)Lcom/onesignal/outcomes/domain/OSOutcomeSource; = SetDirectBody(Com.Onesignal.Outcomes.Domain.OSOutcomeSourceBody)
  setIndirectBody(Lcom/onesignal/outcomes/domain/OSOutcomeSourceBody;)Lcom/onesignal/outcomes/domain/OSOutcomeSource; = SetIndirectBody(Com.Onesignal.Outcomes.Domain.OSOutcomeSourceBody)
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/outcomes/domain/OSOutcomeSourceBody = Com.Onesignal.Outcomes.Domain.OSOutcomeSourceBody
  <init>()V = .ctor()
  <init>(Lorg/json/JSONArray;)V = .ctor(Org.Json.JSONArray)
  <init>(Lorg/json/JSONArray;Lorg/json/JSONArray;)V = .ctor(Org.Json.JSONArray, Org.Json.JSONArray)
  getInAppMessagesIds()Lorg/json/JSONArray; = InAppMessagesIds
  setInAppMessagesIds(Lorg/json/JSONArray;)V = InAppMessagesIds
  getNotificationIds()Lorg/json/JSONArray; = NotificationIds
  setNotificationIds(Lorg/json/JSONArray;)V = NotificationIds
  toJSONObject()Lorg/json/JSONObject; = ToJSONObject()
com/onesignal/PermissionsActivity = Com.OneSignal.Android.PermissionsActivity
  <init>()V = .ctor()
com/onesignal/PushRegistrator = Com.OneSignal.Android.IPushRegistrator
  registerForPush(Landroid/content/Context;Ljava/lang/String;Lcom/onesignal/PushRegistrator$RegisteredHandler;)V = RegisterForPush(Android.Content.Context, string, Com.OneSignal.Android.IPushRegistrator.IRegisteredHandler)
com/onesignal/PushRegistratorADM = Com.OneSignal.Android.PushRegistratorADM
  <init>()V = .ctor()
  fireCallback(Ljava/lang/String;)V = FireCallback(string)
  registerForPush(Landroid/content/Context;Ljava/lang/String;Lcom/onesignal/PushRegistrator$RegisteredHandler;)V = RegisterForPush(Android.Content.Context, string, Com.OneSignal.Android.IPushRegistrator.IRegisteredHandler)
com/onesignal/shortcutbadger/Badger = Com.Onesignal.Shortcutbadger.IBadger
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/AdwHomeBadger = Com.Onesignal.Shortcutbadger.Impl.AdwHomeBadger
  <init>()V = .ctor()
  CLASSNAME = Classname
  COUNT = Count
  INTENT_UPDATE_COUNTER = IntentUpdateCounter
  PACKAGENAME = Packagename
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/ApexHomeBadger = Com.Onesignal.Shortcutbadger.Impl.ApexHomeBadger
  <init>()V = .ctor()
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/AsusHomeBadger = Com.Onesignal.Shortcutbadger.Impl.AsusHomeBadger
  <init>()V = .ctor()
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/DefaultBadger = Com.Onesignal.Shortcutbadger.Impl.DefaultBadger
  <init>()V = .ctor()
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/EverythingMeHomeBadger = Com.Onesignal.Shortcutbadger.Impl.EverythingMeHomeBadger
  <init>()V = .ctor()
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/HuaweiHomeBadger = Com.Onesignal.Shortcutbadger.Impl.HuaweiHomeBadger
  <init>()V = .ctor()
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/LGHomeBadger = Com.Onesignal.Shortcutbadger.Impl.LGHomeBadger
  <init>()V = .ctor()
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/NewHtcHomeBadger = Com.Onesignal.Shortcutbadger.Impl.NewHtcHomeBadger
  <init>()V = .ctor()
  COUNT = Count
  EXTRA_COMPONENT = ExtraComponent
  EXTRA_COUNT = ExtraCount
  INTENT_SET_NOTIFICATION = IntentSetNotification
  INTENT_UPDATE_SHORTCUT = IntentUpdateShortcut
  PACKAGENAME = Packagename
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/NovaHomeBadger = Com.Onesignal.Shortcutbadger.Impl.NovaHomeBadger
  <init>()V = .ctor()
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/OPPOHomeBader = Com.Onesignal.Shortcutbadger.Impl.OPPOHomeBader
  <init>()V = .ctor()
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/SamsungHomeBadger = Com.Onesignal.Shortcutbadger.Impl.SamsungHomeBadger
  <init>()V = .ctor()
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/SonyHomeBadger = Com.Onesignal.Shortcutbadger.Impl.SonyHomeBadger
  <init>()V = .ctor()
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/VivoHomeBadger = Com.Onesignal.Shortcutbadger.Impl.VivoHomeBadger
  <init>()V = .ctor()
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/XiaomiHomeBadger = Com.Onesignal.Shortcutbadger.Impl.XiaomiHomeBadger
  <init>()V = .ctor()
  EXTRA_UPDATE_APP_COMPONENT_NAME = ExtraUpdateAppComponentName
  EXTRA_UPDATE_APP_MSG_TEXT = ExtraUpdateAppMsgText
  INTENT_ACTION = IntentAction
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/impl/ZukHomeBadger = Com.Onesignal.Shortcutbadger.Impl.ZukHomeBadger
  <init>()V = .ctor()
  getSupportLaunchers()Ljava/util/List; = SupportLaunchers
  executeBadge(Landroid/content/Context;Landroid/content/ComponentName;I)V = ExecuteBadge(Android.Content.Context, Android.Content.ComponentName, int)
com/onesignal/shortcutbadger/ShortcutBadgeException = Com.Onesignal.Shortcutbadger.ShortcutBadgeException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Exception;)V = .ctor(string, Java.Lang.Exception)
com/onesignal/shortcutbadger/ShortcutBadger = Com.Onesignal.Shortcutbadger.ShortcutBadger
  applyCount(Landroid/content/Context;I)Z = ApplyCount(Android.Content.Context, int)
  applyCountOrThrow(Landroid/content/Context;I)V = ApplyCountOrThrow(Android.Content.Context, int)
  applyNotification(Landroid/content/Context;Landroid/app/Notification;I)V = ApplyNotification(Android.Content.Context, Android.App.Notification, int)
  isBadgeCounterSupported(Landroid/content/Context;)Z = IsBadgeCounterSupported(Android.Content.Context)
  removeCount(Landroid/content/Context;)Z = RemoveCount(Android.Content.Context)
  removeCountOrThrow(Landroid/content/Context;)V = RemoveCountOrThrow(Android.Content.Context)
com/onesignal/shortcutbadger/util/BroadcastHelper = Com.Onesignal.Shortcutbadger.Util.BroadcastHelper
  <init>()V = .ctor()
  canResolveBroadcast(Landroid/content/Context;Landroid/content/Intent;)Z = CanResolveBroadcast(Android.Content.Context, Android.Content.Intent)
  resolveBroadcast(Landroid/content/Context;Landroid/content/Intent;)Ljava/util/List; = ResolveBroadcast(Android.Content.Context, Android.Content.Intent)
  sendIntentExplicitly(Landroid/content/Context;Landroid/content/Intent;)V = SendIntentExplicitly(Android.Content.Context, Android.Content.Intent)
com/onesignal/shortcutbadger/util/CloseHelper = Com.Onesignal.Shortcutbadger.Util.CloseHelper
  <init>()V = .ctor()
  close(Landroid/database/Cursor;)V = Close(Android.Database.ICursor)
  closeQuietly(Ljava/io/Closeable;)V = CloseQuietly(Java.IO.ICloseable)
com/onesignal/SyncJobService = Com.OneSignal.Android.SyncJobService
  <init>()V = .ctor()
  onStartJob(Landroid/app/job/JobParameters;)Z = OnStartJob(Android.App.Job.JobParameters)
  onStopJob(Landroid/app/job/JobParameters;)Z = OnStopJob(Android.App.Job.JobParameters)
com/onesignal/SyncService = Com.OneSignal.Android.SyncService
  <init>()V = .ctor()
  onBind(Landroid/content/Intent;)Landroid/os/IBinder; = OnBind(Android.Content.Intent)
com/onesignal/TLS12SocketFactory = Com.OneSignal.Android.TLS12SocketFactory
  <init>(Ljavax/net/ssl/SSLSocketFactory;)V = .ctor(Javax.Net.Ssl.SSLSocketFactory)
  createSocket(Ljava/lang/String;I)Ljava/net/Socket; = CreateSocket(string, int)
  createSocket(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket; = CreateSocket(string, int, Java.Net.InetAddress, int)
  createSocket(Ljava/net/InetAddress;I)Ljava/net/Socket; = CreateSocket(Java.Net.InetAddress, int)
  createSocket(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket; = CreateSocket(Java.Net.InetAddress, int, Java.Net.InetAddress, int)
  createSocket(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket; = CreateSocket(Java.Net.Socket, string, int, bool)
  getDefaultCipherSuites()[Ljava/lang/String; = GetDefaultCipherSuites()
  getSupportedCipherSuites()[Ljava/lang/String; = GetSupportedCipherSuites()
com/onesignal/UpgradeReceiver = Com.OneSignal.Android.UpgradeReceiver
  <init>()V = .ctor()
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
