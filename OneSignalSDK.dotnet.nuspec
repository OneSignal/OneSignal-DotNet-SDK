<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd">
    <metadata>
        <version>4.2.0-beta1-maui-only</version>
        <id>OneSignalSDK.dotnet</id>
        <title>OneSignal SDK for dotnet</title>
        <authors>OneSignal</authors>
        <owners>OneSignal</owners>
        <licenseUrl>https://github.com/OneSignal/OneSignal-dotnet-SDK/blob/master/LICENSE</licenseUrl>
        <projectUrl>https://github.com/OneSignal/OneSignal-dotnet-SDK</projectUrl>
        <icon>nuget_icon.png</icon>
        <requireLicenseAcceptance>false</requireLicenseAcceptance>
        <description>OneSignal for dotnet</description>
        <summary>OneSignal is a free push notification service for mobile apps. This plugin makes it easy to integrate your dotnet app with OneSignal</summary>
        <tags>xamarin, monodroid, C#, OneSignal, push</tags>
        <dependencies>
            <group targetFramework="net6.0">
            </group>
            <group targetFramework="net6.0-ios10.0">
            </group>
            <group targetFramework="net6.0-android21.0">
                <dependency id="dotnet.Kotlin.StdLib.Jdk8" version="1.6.21.1" />

                <dependency id="dotnet.AndroidX.CardView" version="1.0.0.16" />
                <dependency id="dotnet.AndroidX.Legacy.Support.V4" version="1.0.0.14" />
                <dependency id="dotnet.AndroidX.Browser" version="1.4.0.2" />
                <dependency id="dotnet.AndroidX.AppCompat" version="1.4.2.1" />
                <dependency id="dotnet.AndroidX.Work.Runtime" version="2.7.1.4" />

                <dependency id="dotnet.Firebase.Messaging" version="122.0.0.6" />
                <!-- Dagger is required for FCM, should be a "transitive dependency" but is not due to this bug:
                     https://github.com/xamarin/dotnetComponents/issues/1069 -->
                <dependency id="dotnet.Google.Dagger" version="2.41.0.1" />
            </group>
            <!-- OneSignal-iOS-SDK requires iOS 9.0, however dotnet.iOS90 or dotnet.iOS9.0 does not work. -->
            <group targetFramework="dotnet.iOS">
                <!-- No 3rd party iOS specific dependencies -->
                <!-- There are Apple framework dependencies, these are defined in OneSignalSDK.dotnet.targets -->
            </group>
        </dependencies>
    </metadata>
    <files>
        <!--Core-->
        <file src="OneSignalSDK.dotnet\bin\Release\net6.0\OneSignalSDK.dotnet.pdb" target="lib\net6.0" />
        <file src="OneSignalSDK.dotnet\bin\Release\net6.0\OneSignalSDK.dotnet.dll" target="lib\net6.0" />
        <file src="OneSignalSDK.dotnet.Core\bin\Release\net6.0\OneSignalSDK.dotnet.Core.pdb" target="lib\net6.0" />
        <file src="OneSignalSDK.dotnet.Core\bin\Release\net6.0\OneSignalSDK.dotnet.Core.dll" target="lib\net6.0" />

        <!--dotnet.Android-->
        <!-- Omit OneSignalSDK.dotnet.aar as it includes an extra copy of Kotlin which results in duplicate class build errors -->
        <file src="OneSignalSDK.dotnet.Android\bin\Release\net6.0-android\*OneSignal*" exclude="**\OneSignalSDK.dotnet.aar" target="lib\net6.0-android21.0" />

        <!--dotnet.iOS Unified-->
        <file src="OneSignalSDK.dotnet.iOS\bin\Release\net6.0-ios\*OneSignal*" target="lib\net6.0-ios10.0" />

        <!-- Workaround to support .XCFramework for iOS  -->
        <!-- Resources includes the full OneSignal.XCFramework.
             iOS.Binding project has NoBindingEmbedding = true so it isn't also bundled in the .dll -->
        <file src="OneSignal.iOS.Binding\bin\Release\net6.0-ios\OneSignal.iOS.Binding.resources\**" target="res\ios" />
        <!-- This is a .target files that gets used by project that consumes the NuGet package.
             This copies out the OneSignal.xcframework from the resources folder and adds a NativeReference to it in the app project. -->
        <file src="OneSignal.iOS.Binding\OneSignalSDK.dotnet.targets" target="build\net6.0-ios10.0\" />
        <file src="nuget_icon.png" />
    </files>
</package>
